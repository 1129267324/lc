<!--基于仿真机器人与模拟的激光雷达数据进行gmapping建图-->
<launch>
    <param name="use_sim_time" value="false" />
	<arg name="model" />
	<arg name="gui" default="False" />
    <param name="use_gui" value="$(arg gui)"/>
    <!--运行"joint_state_publisher节点，发布机器人的关节状态-->
	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node>
 <!--运行robot_state_publisher节点，发布tf-->
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
<!--自己建立小车模型，这个可以进行随意搭建与替换-->
    <param name="robot_description" textfile="$(find smartcar_description)/urdf/smartcar.urdf" />
    <!--添加rviz-->
   <node pkg="rviz"  type="rviz"  name="rviz"  required="true" args="-d $(find smartcar_description)/urdf/lc_1.rviz" />
   <!--添加地图-->
   <node pkg="map_server"  type="map_server"  name="map_server"  args="$(find test)/maps/lc_map.yaml" />
   <!--<node pkg="map_server"  type="map_server"  name="map_server"  args="$(find test)/maps/MG_map.yaml" />-->

  <!--模拟雷达数据的输出-->
  <node pkg="lidar_simulation" type="lidar_simulation" name="lidar" output="screen">
      <param name="min_angle"  value="-3.141592653"/>
      <param name="max_angle"  value="3.141592653" />
      <param name="min_distance" value="0.15" />
      <param name="max_distance" value="6.50" />
      <param name="size" value="400"/>
      <param name="global_frame" value="odom"/>
      <param name="lidar_frame" value="lidar"/>
    </node>
<!--传递/cmd_vel给建立的小车模型，驱动其行走-->
     <node pkg="autolabor_fake" type="autolabor_fake_node" name="autolabor_driver" >
      <remap from="/autolabor/cmd_vel" to="cmd_vel" />
      <remap from="/autolabor/odom" to="odom" />
      <param name="cmd_timeout" value="0.5" />
    </node>
<!--加入速度平滑滤波算法-->
    <include file="$(find yocs_velocity_smoother)/launch/velocity_smoother.launch" />
<!--进行tf转换-->
    <node pkg="tf" type="static_transform_publisher" name="base_link_to_laser" args="0.0 0.0 0.20 0.0 0.0 0.0 /base_link /lidar 10" />
    
</launch>

