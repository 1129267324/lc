# 指定用于move_base的全局规划器插件名称.
base_global_planner: "global_planner/GlobalPlanner"
# 指定用于move_base的局部规划器插件名称.
base_local_planner: "dwa_local_planner/DWAPlannerROS"
recovery_behaviors:
  - {name: conservative_reset, type: clear_costmap_recovery/ClearCostmapRecovery} 
  - {name: rotate_recovery, type: rotate_recovery/RotateRecovery} 
  - {name: aggressive_reset, type: clear_costmap_recovery/ClearCostmapRecovery}

# The rate in Hz at which to run the global planning loop. If the frequency is set to 0.0, the global planner will only run when a new goal is received or the local planner reports that its path is blocked.(double, default: 0.0)
# 全局规划操作的执行频率.如果设置为0.0,则全局规划器仅
#       在接收到新的目标点或者局部规划器报告路径堵塞时才会重新执行规划操作.
planner_frequency: 2.0

# The rate in Hz at which to run the control loop and send velocity commands to the base.(double, default: 20.0)
# 向底盘控制移动话题cmd_vel发送命令的频率.
controller_frequency: 5.0

# How long the planner will wait in seconds in an attempt to find a valid plan before space-clearing operations are performed.(double, default: 5.0)
planner_patience: 5.0

# How long the controller will wait in seconds without receiving a valid control before space-clearing operations are performed.(double, default: 15.0)
# 在空间清理操作执行前,控制器花多长时间等有效控制下发.
controller_patience: 3.0

# Whether or not to enable the move_base recovery behaviors to attempt to clear out space.(bool, default: true)
recovery_behavior_enabled: true

# Determines whether or not the robot will attempt an in-place rotation when attempting to clear out space. Note: This parameter is only used when the default recovery behaviors are in use, meaning the user has not set the recovery_behaviors parameter to anything custom.(bool, default: true)
clearing_rotation_allowed: true

# Determines whether or not to shutdown the costmaps of the node when move_base is in an inactive state (bool, default: false)
# 当move_base在不活动状态时,是否关掉costmap.
shutdown_costmaps: false

# How long in seconds to allow for oscillation before executing recovery behaviors. A value of 0.0 corresponds to an infinite timeout. (double, default: 0.0)
# 执行修复机制前,允许振荡的时长.
oscillation_timeout: 5.0

# How far in meters the robot must move to be considered not to be oscillating. Moving this far resets the timer counting up to the ~oscillation_timeout (double, default: 0.5)
# 来回运动在多大距离以上不会被认为是振荡.
oscillation_distance: 0.3

# How many times to allow for planning retries before executing recovery behaviors. A value of -1.0 corresponds to an infinite retries.(int32_t, default: -1)
#max_planning_retries: -1

#############################
# plug for recovery_behaviors
#############################
conservative_reset:
# The radius away from the robot in meters outside which obstacles will be removed from the costmaps when they are reverted to the static map.
    reset_distance: 1.0

aggressive_reset:
# The radius away from the robot in meters outside which obstacles will be removed from the costmaps when they are reverted to the static map.
    reset_distance: 0.0
